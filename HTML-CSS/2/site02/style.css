
* {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: sans-serif;
    background-color: #f5f6f7;
}


.gallery img {
    width: 100%;
    max-width: 350px;
    height: 300px;
    object-fit: cover;
    border-radius: 10px;
}

.header {
    padding: 32px;
    text-align: center;
    text-transform: uppercase;
    background-color: #0a0a23;
    color: #fff;
    border-bottom: 4px solid #fdb347;
}

.gallery {
    display: flex;
    flex-direction:row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    padding: 20px 10px;
    max-width: 1400px;
    margin: 0 auto;
    gap: 16px;
}

.gallery::after {
    content: "";
    width: 350px;
}

/* O Flexbox tem um eixo principal e um eixo cruzado. O eixo principal é definido pela propriedade flex-direction, que tem quatro valores possíveis:

row (padrão): eixo horizontal com os itens flex items da esquerda para a direita
row-reverse: eixo horizontal com os itens flex da direita para a esquerda
column: eixo vertical com os itens flex de cima para baixo
column-reverse: eixo vertical com os itens flex de baixo para cima
Observação: os eixos e direções serão diferentes, dependendo da direção do texto. Os valores mostrados são para uma direção de texto da esquerda para a direita.
A propriedade flex-wrap determina como os itens flex se comportam quando o contêiner flex for muito pequeno. Defini-la como wrap permitirá que os itens sejam associados à próxima linha ou coluna. nowrap (padrão) impedirá que os itens sejam associados ou que encolham, se necessário.
A propriedade justify-content determina como os itens dentro de um contêiner flex são posicionados no eixo principal, afetando a posição e o espaço ao seu redor.
A propriedade align-items posiciona o conteúdo do flex ao longo do eixo transversal. Neste caso, com flex-direction definido como row, o eixo cruzado seria vertical.
A propriedade abreviada gap do CSS define as lacunas (gaps), também conhecidas como calhas, entre as linhas e as colunas. A propriedade gap e suas subpropriedades row-gap e column-gap fornecem essa funcionalidade para layouts flex, grid e multicolunas. Você aplica a propriedade ao elemento contêiner. */